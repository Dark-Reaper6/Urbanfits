import React from 'react'
import { useRouter } from 'next/router'
import { Inter } from '@next/font/google'
import { toast, Slide } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import Button from './simple_btn'
import LinkBtn from './link_btn'
import jwt from 'jsonwebtoken';
// imports for images
import Urbanfit_logo from '../public/logo_gold.svg'
import google_logo from '../public/google-logo.png'
import apple_logo from '../public/apple-logo2.png';

// imports for validation
import { useFormik } from 'formik';
import Tooltip from './tooltip';

// configuring inter font
const inter = Inter({ subsets: ['latin'] })


export default function Signing(props) {
    const { page } = props
    // configuring router
    const router = useRouter()
    //                                     Submit form functionality

    const initialValueChanger = () => { // Initial Values Object would change on the basis of route name
        let path = router.pathname
        if (path === "/signup") return props.initialSignupValues
        if (path === "/login") return props.initialLoginValues
        if (path === "/forgotpassword") return props.initialForgotPasswordValues
        if (path === "/resetpassword") return props.initialResetPasswordValues
    }
    const validationObjectChanger = () => { // Validation Object would change on the basis of route name
        let path = router.pathname
        if (path === "/signup") return props.signupuSchema
        if (path === "/login") return props.loginSchema
        if (path === "/forgotpassword") return props.forgotpassSchema
        if (path === "/resetpassword") return props.resetpassSchema
    }
    //                                      Submit function

    // setting request method according to the pathname
    const getMethod = () => {
        let path = router.pathname
        if (path === "/signup") return "POST"
        if (path === "/login") return "POST"
        if (path === "/forgotpassword") return "POST"
        if (path === "/resetpassword") return "PUT"
    }

    const { values, errors, touched, handleBlur, handleChange, handleReset, handleSubmit } = useFormik({
        initialValues: initialValueChanger(),
        validationSchema: validationObjectChanger(),
        onSubmit: async (values) => {
            let user = JSON.stringify(values)
            let path = router.pathname
            console.log(process.env.HOST)
            let response = await fetch(`${process.env.HOST}/api/user${path}`, {
                method: getMethod(),
                headers: { "Content-Type": "application/json" },
                body: user
            })
            const toaster = (type, msg) => {
                toast(msg, {
                    position: "top-left",
                    autoClose: 5000,
                    hideProgressBar: false,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    type: type,
                    progress: undefined,
                    theme: "colored",
                    transition: Slide
                })
            }
            let res = await response.json()
            if (!res.success) return toaster("error", res.msg)
            if (res.success) toaster("success", res.msg)
            localStorage.setItem("authToken", res.payload)
            console.log(res.payload, "MuhammadBilawalAshrafOwnsUrbanFisBrand")
            const decodedPayload = jwt.decode(res.payload)

            console.log(decodedPayload)
            router.push('/')
            handleReset()
        }
    })


    return (
        <>
            <Head>
                <title>Urban Fits - {page === 'login' ? 'Login' : 'Sign Up'}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>

            <main className={`bg-white lg:overflow-x-hidden`}>
                <section className='lg:flex lg:items-center lg:justify-center lg:w-screen lg:h-screen' >
                    <div className=" w-[95%] md:w-[407px] mt-16 lg:mt-0 mx-auto ">
                        {/* This image will only show on the top in the Sign Up page */}
                        <Image src={Urbanfit_logo} alt="Urbanfits Logo" className={`${page === 'login' ? 'hidden' : ''} w-1/2 mx-auto mb-3`} />
                        <div className='w-full mx-auto mb-7' >
                            <h2 className="font_futuraLT font-medium text-4xl leading-[47px] text-center">Join Our Urban Program <br /> and get free Shipping <br /> & free returns on <br /> every order</h2>
                        </div>
                        <div className='w-[304px] mx-auto leading-8' >
                            <h3 className=" font-light text-2xl text-center">Urban Members get Exclusive <br /> access to products, events, <br /> and offers. Just provide a <br /> few details. It’s free to join and <br /> open to all.</h3>
                        </div>
                    </div>

                    <div className=" w-[95%] md:w-[400px] mx-auto py-7 bg-white">
                        {/* This image will only show in the Login page */}
                        <Image src={Urbanfit_logo} alt="Urbanfits Logo" className={`${page === 'login' ? '' : 'hidden'} w-1/2 mx-auto mb-8`} />
                        {/* These buttons of Google and Apple will show on the top in Loin page */}
                        <div className={`${router.pathname === '/login' ? '' : 'hidden'} w-full mt-3 mb-5 flex justify-center space-x-6`}>
                            <button className="w-1/2 py-2 px-9 bg-gray-100 border border-gray-400 rounded-full hover:shadow-xl transition"><a href="#" title="Continue with Google" className='text-lg font-semibold flex items-center space-x-3'><Image src={google_logo} className='inline' width="28" alt="google" /><p>Google</p></a></button>
                            <button className="w-1/2 py-2 px-9 border border-black bg-black text-white rounded-full hover:shadow-xl transition"><a href="#" title="Continue with Google" className='text-lg font-semibold flex items-center space-x-3'><Image src={apple_logo} className='inline translate-y-[-1px]' width="28" alt="apple" /><p>Apple</p></a></button>
                        </div>
                        <form className="bg-white p-2 font_futuraLT" onReset={handleReset} onSubmit={handleSubmit} >
                            <div className={`relative data_field ${page === 'login' ? 'hidden' : ''} flex items-center border-b  focus:border-yellow-700 hover:border-yellow-600 transition py-2 mb-4`}>
                                {touched.username && errors.username ? <Tooltip classes="form-error" content={errors.username} /> : null}
                                <input className="w-full outline-none border-none" type="text" name="username" id="username" value={values.username} onBlur={handleBlur} onChange={handleChange} placeholder="Username" />
                            </div>
                            <div className={` ${page === "login" && props.type === "resetpass" ? "hidden" : ''} relative ata_field lex items-center border-b  focus:border-yellow-700 hover:border-yellow-600 transition py-2 mb-4`}>
                                {touched.email && errors.email ? <Tooltip classes="form-error" content={errors.email} /> : null}
                                <input className="w-full outline-none border-none" name="email" id="email" value={values.email} onBlur={handleBlur} onChange={handleChange} placeholder="Email or Username" />
                            </div>
                            <div className={`relative data_field ${page === 'login' ? 'hidden' : ''} flex items-center border-b  focus:border-yellow-700 hover:border-yellow-600 transition py-2 mb-4`}>
                                {touched.phone && errors.phone ? <Tooltip classes="form-error" content={errors.phone} /> : null}
                                <input className="w-full outline-none border-none" name="phone" id="phone" value={values.phone} onBlur={handleBlur} onChange={handleChange} placeholder="Phone No." />
                            </div>
                            <div className={`relative  ${props.type === 'forgotpass' ? 'hidden' : ''} data_field lex items-center border-b  focus:border-yellow-700 hover:border-yellow-600 transition py-2 mb-4`}>
                                {touched.password && errors.password ? <Tooltip classes="form-error" content={errors.password} /> : null}
                                <input className="w-full outline-none border-none" type='password' name="password" id="password" value={values.password} onBlur={handleBlur} onChange={handleChange} placeholder="Password" />
                            </div>
                            <div className={`relative  ${props.type === 'resetpass' ? '' : 'hidden'} data_field lex items-center border-b  focus:border-yellow-700 hover:border-yellow-600 transition py-2`}>
                                {touched.reppassword && errors.reppassword ? <Tooltip classes="form-error" content={errors.reppassword} /> : null}
                                <input className="w-full outline-none border-none" type='password' name="confirm_password" id="confirm_password" value={values.confirm_password} onBlur={handleBlur} onChange={handleChange} placeholder="Confirm Password" />
                            </div>
                            <div className="my-3">
                                <small className='text-gray-400 text-xs '>{props.type === 'forgotpass' ? 'Please enter your username or email address. You will receive an email message with instructions on how to reset your password.' : 'Password must be at least 8 characters and can’t be easy to guess - commonly used or risky passwords are not premitted.'}</small>
                            </div>
                            <div className={`relative ${props.type === 'forgotpass' ? 'hidden' : ''} w-full h-14 mb-3 flex items-center border-b`}>
                                {errors.accept_policies ? <Tooltip classes="form-error" content={errors.accept_policies} /> : null}
                                <div className='mr-2' >
                                    <input className='rounded' type="checkbox" id="todo" name="accept_policies" value={values.accept_policies} onChange={handleChange} />
                                </div>
                                <div className=" w-full flex justify-between text-sm]">
                                    <small className="ml-1 text-gray-400">{page === 'login' ? 'Remember me' : <p>Buy creating an account, I agree to the <Link href="/terms&conditions" className=' text-black underline' >Terms & Conditions</Link>.I have read the <Link href="/legalnotice" className=' text-black underline' >Legal Notice</Link> and <Link href="/privacypolicy" className=' text-black underline' >Privacy Policy</Link></p>}</small>
                                    <small className="ml-1 text-gray-400"><Link href="/forgotpassword" >{page === 'login' ? 'Forgot Password?' : ''}</Link></small>
                                </div>
                            </div>
                            {/* changing Buttons according to different page endpoints */}
                            {router.pathname === '/signup' ? <Button classes='w-full' type="submit" >Sign Up</Button> : null}
                            {router.pathname === '/login' ? <Button classes='w-full' type="submit" >Login</Button> : null}
                            {router.pathname === '/forgotpassword' ? <Button classes='w-full' type="submit" >Verify</Button> : null}
                            {router.pathname === '/resetpassword' ? <Button classes='w-full' type="submit" >Login</Button> : null}

                            <Link href={page === 'login' ? '/signup' : '/login'} className='underline underline-offset-1'><h1 className='w-full text-center' >{page === 'login' ? 'Create a New Account' : 'Log in with an Existing Account'}</h1></Link>
                            {/* These buttons of Google and Apple will show on the bottom only in Sign Up page */}
                            <div className={`${page === 'login' ? 'hidden' : ''} ${inter.className} w-full mt-5 flex justify-center space-x-6`}>
                                <button className="w-1/2 py-2 px-9 bg-gray-100 border border-gray-400 rounded-full hover:shadow-xl transition"><a href="#" title="Continue with Google" className='text-lg flex items-center space-x-3'><Image src={google_logo} className='inline' width="28" alt="google" /><p>Google</p></a></button>
                                <button className="w-1/2 py-2 px-9 border border-black bg-black text-white rounded-full hover:shadow-xl transition"><a href="#" title="Continue with Google" className='text-lg flex items-center space-x-3'><Image src={apple_logo} className='inline translate-y-[-1px]' width="28" alt="apple" /><p>Apple</p></a></button>
                            </div>
                        </form>
                    </div>
                </section>

                <div className="w-full my-5 px-10 font_futuraLT flex flex-col lg:flex-row justify-between lg:space-x-3">
                    <LinkBtn href='/' classes='w-full'>Home</LinkBtn>
                    <LinkBtn href='/catelog' classes='w-full'>Catelog</LinkBtn>
                    <LinkBtn href='/contact' classes='w-full'>Contact Us</LinkBtn>
                    <LinkBtn href='/privacypolicy' classes='w-full'>Privacy Policy</LinkBtn>
                    <LinkBtn href='/legalnotice' classes='w-full'>Legal Notice</LinkBtn>
                    <LinkBtn href='/terms&conditions' classes='w-full'>Terms & Condition</LinkBtn>
                </div>
            </main>
        </>
    )
}
